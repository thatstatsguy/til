@page "/"



<PageTitle>Index</PageTitle>
<div>
    <button @onclick="AccessResultInContinuation">Access result with continuation</button>
</div>


@if (!string.IsNullOrEmpty(_message))
{
    <p>@_message</p>
}

@code {
    private string _message = string.Empty;
    private void AccessResultInContinuation()
    {
        var taskA = Task.Run(() =>
        {
            Thread.Sleep(2000);
            return "Test";
        });

        taskA.ContinueWith(t =>
        {
            //fine to reference result in this as you're guaranteed that taskA will be complete.
            _message = $"A {t.Result}";
            InvokeAsync(StateHasChanged);
            //if any exceptions thrown here you won't see this as we don't await it
        });
        
        
    }
}